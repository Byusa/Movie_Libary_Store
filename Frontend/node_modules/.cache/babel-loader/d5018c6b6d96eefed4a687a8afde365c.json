{"ast":null,"code":"import _slicedToArray from \"/Users/sergebyusa/Desktop/Projects/book_practice_js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/sergebyusa/Desktop/Projects/book_practice_js/src/components/ReadFile.jsx\";\nimport React, { useState } from 'react';\nvar CSVReader = function CSVReader() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var handleChange = function handleChange(e) {\n    var files = e.target.files;\n    if (files && files.length > 0) {\n      readFile(files[0]);\n    }\n  };\n  var readFile = function readFile(file) {\n    var reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = function (e) {\n      var csv = e.target.result;\n      var lines = csv.split(\"\\n\").slice(1);\n      var result = lines.map(function (line) {\n        return line.split(\",\");\n      });\n      setData(result);\n    };\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Upload CSV File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    accept: \".csv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, data.map(function (row, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, row.map(function (cell, index) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, cell, \" \");\n    }));\n  })));\n};\nexport default CSVReader;","map":{"version":3,"names":["React","useState","CSVReader","data","setData","handleChange","e","files","target","length","readFile","file","reader","FileReader","readAsText","onload","csv","result","lines","split","slice","map","line","row","index","cell"],"sources":["/Users/sergebyusa/Desktop/Projects/book_practice_js/src/components/ReadFile.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst CSVReader = () => {\n  const [data, setData] = useState([]);\n  \n  const handleChange = (e) => {\n    let files = e.target.files;\n    if (files && files.length > 0) {\n      readFile(files[0]);\n    }\n  };\n  \n  const readFile = (file) => {\n    let reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = (e) => {\n      let csv = e.target.result;\n      let lines = csv.split(\"\\n\").slice(1);\n      let result = lines.map((line) => line.split(\",\"));\n      setData(result);\n    };\n  };\n\n  return (\n    <div>\n      <h3>Upload CSV File</h3>\n      <input type=\"file\" onChange={handleChange} accept=\".csv\" />\n      <div>\n        {data.map((row, index) => (\n          <div key={index}>\n            {row.map((cell, index) => (\n              <span key={index}>{cell} </span>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CSVReader;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,IAAMC,SAAS,GAAG,SAAZA,SAAS,GAAS;EAAA,gBACED,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BE,IAAI;IAAEC,OAAO;EAEpB,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,CAAC,EAAK;IAC1B,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC1B,IAAIA,KAAK,IAAIA,KAAK,CAACE,MAAM,GAAG,CAAC,EAAE;MAC7BC,QAAQ,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;EAED,IAAMG,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,IAAI,EAAK;IACzB,IAAIC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC7BD,MAAM,CAACE,UAAU,CAACH,IAAI,CAAC;IACvBC,MAAM,CAACG,MAAM,GAAG,UAACT,CAAC,EAAK;MACrB,IAAIU,GAAG,GAAGV,CAAC,CAACE,MAAM,CAACS,MAAM;MACzB,IAAIC,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;MACpC,IAAIH,MAAM,GAAGC,KAAK,CAACG,GAAG,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;MAAA,EAAC;MACjDf,OAAO,CAACa,MAAM,CAAC;IACjB,CAAC;EACH,CAAC;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,iBAAe,CAAK,eACxB;IAAO,IAAI,EAAC,MAAM;IAAC,QAAQ,EAAEZ,YAAa;IAAC,MAAM,EAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eAC3D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,IAAI,CAACkB,GAAG,CAAC,UAACE,GAAG,EAAEC,KAAK;IAAA,oBACnB;MAAK,GAAG,EAAEA,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACbD,GAAG,CAACF,GAAG,CAAC,UAACI,IAAI,EAAED,KAAK;MAAA,oBACnB;QAAM,GAAG,EAAEA,KAAM;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAEC,IAAI,EAAC,GAAC,CAAO;IAAA,CACjC,CAAC,CACE;EAAA,CACP,CAAC,CACE,CACF;AAEV,CAAC;AAED,eAAevB,SAAS"},"metadata":{},"sourceType":"module"}